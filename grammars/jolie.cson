fileTypes: [
  "ol"
  "iol"
]
scopeName: "source.ol"
foldingStartMarker: "\\{\\s*$"
foldingStopMarker: "^\\s*\\}"
#foldingStartMarker: "(\\{\\s*(//.*)?$|^\\s*// \\{\\{\\{)"
#foldingStopMarker: "^\\s*(\\}|// \\}\\}\\}$)"
name: "Jolie"
patterns: [
  { include: "#code" }
]
repository:
  code:
    patterns: [
      { include: "#comments" },
      { include: "#strings" },
      { include: "#keywords_control" },
      { include: "#keywords_other" },
      { include: "#operators" }
    ]
  comments:
    begin: "/\\*"
    end: "\\*/"
    name: "comment.block.jolie"
  keywords_other:
    name: "keyword.other.jolie"
    match: "\\b(global|constants|cH|instanceof|interface|Protocol|Interfaces|define|Location|Aggregates|inputPort|service|outputPort|OneWay|RequestResponse|execution|comp|concurrent|nullProcess|single|sequential|main|init|cset|Redirects|csets|is_defined|embedded|extender|Java|Jolie|JavaScript|courier|forward|install|undef|include|synchronized|throws)\\b"
  keywords_control:
    name: "keyword.control.jolie"
    match: "\\b(if|while|for|foreach|forward)\\b"
  strings:
    name: "string.quoted.double.jolie"
    begin: "\""
    end: "\""
    patterns: [
      {
        match: "\\\\."
        name: "constant.character.escape.jolie"
      }
    ]
  # operators:

    #         begin: "\""
    #         beginCaptures:
    #           "0":
    #             name: "punctuation.definition.string.begin.jolie"
    #         end: "\""
    #         endCaptures:
    #           "0":
    #             name: "punctuation.definition.string.end.jolie"
    #         name: "string.quoted.double.jolie"
    #         patterns: [
    #           {
    #             match: "\\\\."
    #             name: "constant.character.escape.jolie"
    #           }
    #         ]
    #       }
#
# repository:
#   code:
#     patterns: [
#       {
#         include: "#comments"
#       }
#       {
#         include: "#class"
#       }
#       {
#         begin: "{"
#         end: "}"
#         patterns: [
#           {
#             include: "#code"
#           }
#         ]
#       }
#       {
#         include: "#assertions"
#       }
#       {
#         include: "#parens"
#       }
#       {
#         include: "#constants-and-special-vars"
#       }
#       {
#         include: "#anonymous-classes-and-new"
#       }
#       {
#         include: "#keywords"
#       }
#       {
#         include: "#storage-modifiers"
#       }
#       {
#         include: "#strings"
#       }
#       {
#         include: "#all-types"
#       }
#     ]
#   comments:
#     patterns: [
#       {
#         captures:
#           "0":
#             name: "punctuation.definition.comment.jolie"
#         match: "/\\*\\*/"
#         name: "comment.block.empty.jolie"
#       }
#       {
#         include: "text.html.joliedoc"
#       }
#       {
#         include: "#comments-inline"
#       }
#     ]
#   "comments-inline":
#     patterns: [
#       {
#         begin: "/\\*"
#         captures:
#           "0":
#             name: "punctuation.definition.comment.jolie"
#         end: "\\*/"
#         name: "comment.block.jolie"
#       }
#     ]
#   "constants-and-special-vars":
#     patterns: [
#       {
#         match: "(true|false|null)"
#         name: "constant.language.jolie"
#       }
#       {
#         match: "\\b((0(x|X)[0-9a-fA-F]*)|(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))((e|E)(\\+|-)?[0-9]+)?)([LlFfUuDd]|UL|ul)?\\b"
#         name: "constant.numeric.jolie"
#       }
#       {
#         captures:
#           "1":
#             name: "keyword.operator.dereference.jolie"
#         match: "(\\.)?\\b([A-Z][A-Z0-9_]+)(?!<|\\.class|\\s*\\w+\\s*=)\\b"
#         name: "constant.other.jolie"
#       }
#       {
#         captures:
#           "1":
#             name: "constant.other.jolie"
#         match: "(#)(\\w+)"
#         name: "variable.parameter.jolie"
#       }
#     ]
#   enums:
#     begin: "^(?=\\s*[A-Z0-9_]+\\s*({|\\(|,))"
#     end: "(?=;|})"
#     patterns: [
#       {
#         begin: "\\w+"
#         beginCaptures:
#           "0":
#             name: "constant.other.enum.jolie"
#         end: "(?=,|;|})"
#         name: "meta.enum.jolie"
#         patterns: [
#           {
#             include: "#parens"
#           }
#           {
#             begin: "{"
#             end: "}"
#             patterns: [
#               {
#                 include: "#class-body"
#               }
#             ]
#           }
#         ]
#       }
#     ]
#   keywords:
#     patterns: [
#       {
#         match: "\\b(throw|throws|install|scope)\\b"
#         name: "keyword.control.catch-exception.jolie"
#       }
#       {
#         match: "\\?|:"
#         name: "keyword.control.jolie"
#       }
#       {
#         match: "\\b(while|for|foreach|with|in|spawn|over|type|if|else)\\b"
#         name: "keyword.control.jolie"
#       }
#       {
#         match: "\\b(with)\\b"
#         name: "keyword.operator.jolie"
#       }
#       {
#         match: "(==|!=|<=|>=|<>|<|>)"
#         name: "keyword.operator.comparison.jolie"
#       }
#       {
#         match: "(=)"
#         name: "keyword.operator.assignment.jolie"
#       }
#       {
#         match: "(\\-\\-|\\+\\+)"
#         name: "keyword.operator.increment-decrement.jolie"
#       }
#       {
#         match: "(\\-|\\+|\\*|\\/|%)"
#         name: "keyword.operator.arithmetic.jolie"
#       }
#       {
#         match: "(!|&&|\\|\\|)"
#         name: "keyword.operator.logical.jolie"
#       }
#       {
#         match: "(?<=\\S)\\.(?=\\S)"
#         name: "keyword.operator.dereference.jolie"
#       }
#       {
#         match: "(;|\\|)"
#       }
#     ]
#   methods:
#     begin: "(?!new)(?=\\w.*\\s+)(?=[^=]+\\()"
#     end: "}|(?=;)"
#     name: "meta.method.jolie"
#     patterns: [
#       {
#         include: "#storage-modifiers"
#       }
#       {
#         begin: "(\\w+)\\s*\\("
#         beginCaptures:
#           "1":
#             name: "entity.name.function.jolie"
#         end: "\\)"
#         name: "meta.method.identifier.jolie"
#         patterns: [
#           {
#             include: "#parameters"
#           }
#         ]
#       }
#       {
#         begin: "(?=\\w.*\\s+\\w+\\s*\\()"
#         end: "(?=\\w+\\s*\\()"
#         name: "meta.method.return-type.jolie"
#         patterns: [
#           {
#             include: "#all-types"
#           }
#         ]
#       }
#       {
#         include: "#throws"
#       }
#       {
#         begin: "{"
#         end: "(?=})"
#         name: "meta.method.body.jolie"
#         patterns: [
#           {
#             include: "#code"
#           }
#         ]
#       }
#     ]
#   "object-types":
#     patterns: [
#       {
#         begin: "\\b((?:[a-z]\\w*\\.)*[A-Z]+\\w*)<"
#         end: ">|[^\\w\\s,\\?<\\[\\]]"
#         name: "storage.type.generic.jolie"
#         patterns: [
#           {
#             include: "#object-types"
#           }
#           {
#             begin: "<"
#             comment: "This is just to support <>'s with no actual type prefix"
#             end: ">|[^\\w\\s,\\[\\]<]"
#             name: "storage.type.generic.jolie"
#           }
#         ]
#       }
#       {
#         begin: "\\b((?:[a-z]\\w*\\.)*[A-Z]+\\w*)(?=\\[)"
#         end: "(?=[^\\]\\s])"
#         name: "storage.type.object.array.jolie"
#         patterns: [
#           {
#             begin: "\\["
#             end: "\\]"
#             patterns: [
#               {
#                 include: "#code"
#               }
#             ]
#           }
#         ]
#       }
#       {
#         captures:
#           "1":
#             name: "keyword.operator.dereference.jolie"
#         match: "\\b(?:[a-z]\\w*(\\.))*[A-Z]+\\w*\\b"
#         name: "storage.type.jolie"
#       }
#     ]
#   "object-types-inherited":
#     patterns: [
#       {
#         begin: "\\b((?:[a-z]\\w*\\.)*[A-Z]+\\w*)<"
#         end: ">|[^\\w\\s,<]"
#         name: "entity.other.inherited-class.jolie"
#         patterns: [
#           {
#             include: "#object-types"
#           }
#           {
#             begin: "<"
#             comment: "This is just to support <>'s with no actual type prefix"
#             end: ">|[^\\w\\s,<]"
#             name: "storage.type.generic.jolie"
#           }
#         ]
#       }
#       {
#         captures:
#           "1":
#             name: "keyword.operator.dereference.jolie"
#         match: "\\b(?:[a-z]\\w*(\\.))*[A-Z]+\\w*"
#         name: "entity.other.inherited-class.jolie"
#       }
#     ]
#   parameters:
#     patterns: [
#       {
#         match: "final"
#         name: "storage.modifier.jolie"
#       }
#       {
#         include: "#primitive-arrays"
#       }
#       {
#         include: "#primitive-types"
#       }
#       {
#         include: "#object-types"
#       }
#       {
#         match: "\\w+"
#         name: "variable.parameter.jolie"
#       }
#     ]
#   parens:
#     begin: "\\("
#     end: "\\)"
#     patterns: [
#       {
#         include: "#code"
#       }
#     ]
#   "primitive-arrays":
#     patterns: [
#       {
#         match: "\\b(?:string|int|long|bool|undefined|raw|double|void|any)(\\[\\])*\\b"
#         name: "storage.type.primitive.array.jolie"
#       }
#     ]
#   "primitive-types":
#     patterns: [
#       {
#         match: "\\b(?:type|string|int|undefined|double|long|raw|void|any)\\b"
#         name: "storage.type.primitive.jolie"
#       }
#     ]
#   "storage-modifiers":
#     captures:
#       "1":
#         name: "storage.modifier.jolie"
#     match: "\\b(global|constants|cH|instanceof|Interface|Protocol|Interfaces|define|Location|Aggregates|inputPort|service|outputPort|OneWay|RequestResponse|execution|comp|concurrent|nullProcess|single|sequential|main|init|cset|Redirects|csets|is_defined|embedded|extender|Java|Jolie|JavaScript|courier|forward|install|undef|include|synchronized|throws|)\\b"
#   strings:
#     patterns: [
#       {
#         begin: "\""
#         beginCaptures:
#           "0":
#             name: "punctuation.definition.string.begin.jolie"
#         end: "\""
#         endCaptures:
#           "0":
#             name: "punctuation.definition.string.end.jolie"
#         name: "string.quoted.double.jolie"
#         patterns: [
#           {
#             match: "\\\\."
#             name: "constant.character.escape.jolie"
#           }
#         ]
#       }
#       {
#         begin: "'"
#         beginCaptures:
#           "0":
#             name: "punctuation.definition.string.begin.jolie"
#         end: "'"
#         endCaptures:
#           "0":
#             name: "punctuation.definition.string.end.jolie"
#         name: "string.quoted.single.jolie"
#         patterns: [
#           {
#             match: "\\\\."
#             name: "constant.character.escape.jolie"
#           }
#         ]
#       }
#     ]
#   throws:
#     begin: "throws"
#     beginCaptures:
#       "0":
#         name: "storage.modifier.jolie"
#     end: "(?={|;)"
#     name: "meta.throwables.jolie"
#     patterns: [
#       {
#         include: "#object-types"
#       }
#     ]
#   values:
#     patterns: [
#       {
#         include: "#strings"
#       }
#       {
#         include: "#object-types"
#       }
#       {
#         include: "#constants-and-special-vars"
#       }
#     ]
